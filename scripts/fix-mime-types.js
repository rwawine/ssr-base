#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ MIME-—Ç–∏–ø–æ–≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ .next
const nextDir = path.join(process.cwd(), '.next');
if (!fs.existsSync(nextDir)) {
  console.error('‚ùå –ü–∞–ø–∫–∞ .next –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ npm run build');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
const staticDir = path.join(nextDir, 'static');
if (!fs.existsSync(staticDir)) {
  console.error('‚ùå –ü–∞–ø–∫–∞ .next/static –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  process.exit(1);
}

console.log('‚úÖ –ü–∞–ø–∫–∞ .next/static –Ω–∞–π–¥–µ–Ω–∞');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
const checkStaticFiles = (dir) => {
  const items = fs.readdirSync(dir);
  
  items.forEach(item => {
    const fullPath = path.join(dir, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      checkStaticFiles(fullPath);
    } else {
      const ext = path.extname(item);
      const relativePath = path.relative(process.cwd(), fullPath);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
      if (ext === '.js' || ext === '.css' || ext === '.map') {
        console.log(`‚úÖ ${relativePath}`);
      } else {
        console.log(`‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: ${relativePath}`);
      }
    }
  });
};

checkStaticFiles(staticDir);

console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å MIME-—Ç–∏–ø–∞–º–∏:');
console.log('\n1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:');
console.log('   - –î–ª—è nginx –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ nginx.conf');
console.log('   - –î–ª—è Apache –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ MIME-—Ç–∏–ø—ã –≤ .htaccess');
console.log('\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—Ç—É');
console.log('\n3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç—è–º');
console.log('\n4. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run build');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json —Å–∫—Ä–∏–ø—Ç—ã
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
console.log('\nüì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã —Å–±–æ—Ä–∫–∏:');
Object.keys(packageJson.scripts).forEach(script => {
  console.log(`   npm run ${script}`);
});

console.log('\nüöÄ –î–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log('   npm run build');
console.log('   npm start'); 